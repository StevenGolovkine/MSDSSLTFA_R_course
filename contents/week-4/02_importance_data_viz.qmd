---
title: "Importance of data visualisation"
engine: knitr
---

```{r}
#| class-output: outputcode
#| eval: true
#| include: false
library(tidyverse)
library(ggthemes)
```

<br>
Before beginning to learn about what plots are appropriate for a particular variable type, we will highlight the importance of good data visualisation and some of the pitfalls when visualisation is done poorly.

## Why visualise data?

One of the biggest mistakes that is made when starting out in data analytics is not plotting the data as **the** first step. This example shows its importance.

::: {.callout-note appearance="simple"}

## Example

Here we have two numeric variables $x$ and $y$ and $4$ different datasets that have been generated. Let’s pretend that we do not plot the data and instead calculate numerical summaries, mean of $x$ and $y$, variance of $x$ and $y$, correlation coefficient between $x$ and $y$, which is a number describing how strong the relationship is between $x$ and $y$, and regression line. In all $4$ datasets, the value of these numerical summaries are exactly the same. 

What does that tell us without a plot? Effectively nothing. Here’s why. Look now at the plots for each dataset. You should immediately notice how different the patterns are. 

```{r}
#| eval: true
#| echo: false
#| warning: false
#| class-output: outputcode
df <- tibble(
    group = factor(rep(1:4, each = 11)),
    x = c(anscombe$x1, anscombe$x2, anscombe$x3, anscombe$x4),
    y = c(anscombe$y1, anscombe$y2, anscombe$y3, anscombe$y4)
)

ggplot(df, aes(x = x, y = y)) +
    geom_point() +
    geom_smooth(method = 'lm') + 
    facet_wrap(vars(group), labeller = labeller(
        group = ~ paste("Dataset", .x)
    )) +
    theme_bw()

```

In the upper left plot, there is an even spread of points in both axes. In the upper right plot, we have a curved relationship. In the bottom plots, there are clumps of points with a single large outlier.

This example is known as the Anscombe quartet [@anscombe1973].

:::

Sometimes, the numerical summary gives us no meaningfull information about the different dataset. If we were modelling these datasets, we would choose very different models depending on what the plot showed.

## "Bad" data visualisation

#### YouGov pie chart

This plot from YouGov tries to represent the most liked pizza topping. As you can easily remark, the maths are not good... Multiple responses were possible for the survey but a pie chart is definitely not the right way to show the results!

::: {#fig-fox-pie}

![](./images/Its-a-pizza-Chart-Not-a-Pie-chart.png)

YouGov pie chart (2017).

:::


#### Worst graphic ever?

This plot appeared in an academic journal and was created to visualise the age profile of students enrolling in college courses across the years 1972 to 1976. The bottom red and blue component shows the numbers of enrolments over time for >25s. The top green and yellow is enrolments over time for <25s. 

According to Tufte, "this may well be the worst graphic ever to find its way into print". The colours are awful! Why are they in 3D? Why is the top part upside-down? And why is the y-axis broken in the middle? 

::: {#fig-worst-graph}

![](./images/WorstGraphicEver.jpeg)

Age of students enrolling in college (1976).

:::

#### Gun deaths in Florida

The errors in the first two plots are easy to identify. But sometimes graphics are deliberately used to mislead. This plot was created to understand the impact of Florida’s ‘Stand your Ground’ law which was introduced in 2005 and allowed people to shoot someone in self defense. Notice that the graph goes downwards after the law was introduced, which could be interpreted that gun deaths went down after 2005. 

**BUT!** Look at the y-axis – it is upside-down. In fact gun deaths rose significantly after 2005, not dropped.

::: {#fig-gun-death}

![](./images/FloridaGuns.png)

Gun deaths in Florida by the Florida Department of Law Enforcement (2014).

:::

### The lie factor

The lie factor refers to the value by which the size of an effect is distorted or misrepresented in a graph when compared to the actual data. It is defined as the ratio of the size of effect shown in graphic and the size of effect in the data. A lie factor greater than $1$ indicates that the visual representation exaggerates the data, while a lie factor less than $1$ implies an underestimation. Ideally, a well-constructed data visualization should have a lie factor close to 1 to accurately convey information without distortion or misinterpretation.

::: {#fig-lie-factor}

![](./images/Lie_factor.jpg)

Illustration of the lie factor using Fuel Economy standards [@tufte2001].

:::


::: {.callout-note appearance="simple"}

Be careful to not strictly adhere to the lie factor principle without thinking. Sometimes a change in the data is relevant, but hardly visible.

:::


## "Good" data visualisation

In his book, @tufte2001 propose some principles for displaying quantitative information:

* **Data**: Above all, show the data.

* **Question**: Induce the viewer to think about the substance rather than about methodology, graphic design. Encourage the eye to compare different piece of data.

* **Data-ink ratio**: Maximise the data-ink ratio. Erase all non data ink and redundant information.

* **Integrity**: Avoid distorting what the data have to say.

* **General to specific**: Reveal the data at different levels of detail, from broad picture to fine struture.

* **Context**: Graphical display should be closely integrated with statistical and verbal descriptions of the data set.

::: {.callout-note appearance="simple"}

## Example

```{r}
#| eval: true
#| echo: false
#| warning: false
#| class-output: outputcode
A <- list(
    list(
        group = "g1",
        response = rnorm(100, 1.2, 1)
    ),
    list(
        group = "g2",
        response = rnorm(100, -.5, 1.2)
    ),
    list(
        group = "g3",
        response = rnorm(100, 0.5, 1)
    ),
    list(
        group = "g4",
        response = rt(100, 5, 1)
    ),
    list(
        group = "g5",
        response = rexp(100, 0.5)
    )
)

df <- tibble(A) |>
    unnest_wider(col = A) |> 
    unnest(col = response)
df_mean <- df |> 
    group_by(group) |> 
    summarise(mean_ = mean(response)) |> 
    mutate(x_pos = c(0.75, 1.75, 2.75, 3.75, 4.75))
```

To explain Tufte principles, consider distribution of a continuous variable  on $5$ groups. We first use the default R function `boxplot`. We see that this plot is quite full.
```{r}
#| eval: true
#| echo: false
#| warning: false
#| class-output: outputcode
boxplot(df$response ~ df$group)
```

After erasing all non data ink, all redundant information and show the data, we obtain the following plot. Do you think that we have lost anything?
```{r}
#| eval: true
#| echo: false
#| warning: false
#| class-output: outputcode
ggplot(df, aes(x = group, y = response)) + 
    geom_tufteboxplot() +
    geom_text(
        data = df_mean, 
        mapping = aes(x = x_pos, y = mean_, label = round(mean_, 2)),
        color = "darkred", na.rm = TRUE
    ) +
    scale_x_discrete(
        labels=c("g1" = "1", "g2" = "2", "g3" = "3", "g4" = "4", "g5" = "5")
    ) + 
    xlab('Group') +
    ylab('Response') +
    theme_tufte() +
    theme(
        axis.ticks.x = element_blank()
    )
```

:::

### Famous examples of good data visualisation

#### Napoleon campaign

Charles Minard's chart from 1869 illustrates the size of Napoleon's army during the 1812 Russian campaign, their movements, and the temperatures they faced on their return path.

::: {#fig-minard}

![](./images/Minard.png)

The map of Napoleon's Russian campaign by [Minard](https://en.wikipedia.org/wiki/Charles_Joseph_Minard#The_map_of_Napoleon's_Russian_campaign/) in 1869.

:::

#### Cholera map

Snow's chart from 1854 illustrates the number of cholera cases during the London cholera epidemic.  Cholera cases are represented by black marks, highlighting clusters of cases with stacked rectangles.

::: {#fig-snow}

![](./images/Snow.jpg)

London Cholera Map by [Snow](https://en.wikipedia.org/wiki/John_Snow#Cholera) in 1854.

:::

#### Causes of mortality in the army

Nightingale's chart displays the yearly mortality rate per $1000$ individuals for each month, categorizing deaths into preventable diseases (depicted in blue), fatalities resulting from wounds (shown in red), and those attributed to other causes (represented in black).

::: {#fig-nightingale}

![](./images/Nightingale.jpg)

Diagram of the causes of mortality in the army in the east by [Nightingale](https://en.wikipedia.org/wiki/Florence_Nightingale#Statistics_and_sanitary_reform) in 1858.

:::


## Some remarks

::: {.callout-note appearance="simple"}

Be careful to keep all your audience. For example, there are an estimated 300 million people in the world with color vision deficiency[^1]. Around 8% of men and 0.5% of women are colorblind. In `ggplot`, you can use the function `scale_colour_colorblind()` to create a color palette color-blind friendly.

[^1]: [https://clintoneye.com/services/color-blindness/](https://clintoneye.com/services/color-blindness/)

:::

As this course is not about data visualisation, you may refer to @tufte2001 and @chen2008 for more information about data visualisation theory.


## Additional resources

* [Article](https://nightingaledvs.com/the-lie-factor-and-the-baseline-paradox/) on the lie factor and the baseline paradox.

* [\@datavizsociety](https://www.instagram.com/datavizsociety/), [\@amazingmap](https://www.instagram.com/amazingmap) and [\@terriblemap](https://www.instagram.com/terriblemap/) on Instagram.

* The Wikipedia [page](https://en.wikipedia.org/wiki/Charles_Joseph_Minard) of Minard.

* The Wikipedia [page](https://en.wikipedia.org/wiki/John_Snow) of Snow.

* The Wikipedia [page](https://en.wikipedia.org/wiki/Florence_Nightingale) of Nightingale.

## References

::: {#refs}
:::