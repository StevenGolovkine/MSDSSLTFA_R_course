{
  "hash": "c59b4446f2ee3e74f4a1c6cf5a3ff721",
  "result": {
    "markdown": "---\ntitle: \"C++ Integration in R\"\nengine: knitr\n---\n\n\n<br>\nR is an interpreted language, meaning it directly executes instructions without a prior compilation into machine-language code. This execution occurs in real-time as the program is written in the R language. Interpreting code offers dynamic and interactive typing, allowing for flexibility in coding. However, this flexibility comes at the cost of reliability since there is no static type-checking typical of a compiled language. Additionally, interpreting code might lead to slower execution compared to natively compiled machine code.\n\nTo enhance computational speed and integrate C++ into R, we will write C++ code and call it from R. This approach offers the advantage of faster computations while ensuring that the results are readily available within the R environment.\n\nIn this section, we will use the package `Rcpp`. If it is not already installed, do it and then load it. Pay attention that you would need a C++ compiler.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Rcpp)\n```\n:::\n\n\n## Getting started with C++\n\nWe can create `.cpp` file easily within RStudio. We can do it with *File > New File > C++ File*. In this file, we will put our C++ code. When a new file is created it already has some code in it.\n\n```c\n#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nNumericVector timesTwo(NumericVector x) {\n  return x * 2;\n}\n```\n\nWhen we click on the *Source* button, R will compile the function and then we will be able to use our C++ function as any other function in R. There is also a possibiltiy to test the function directly from the C++ file using the following snippet.\n\n```c\n/*** R\ntimesTwo(42)\n*/\n```\n\n\n::: {.callout-note appearance=\"simple\"}\n\nBe careful that indexing in C++ starts at 0, while in R, it starts at 1.\n\n:::\n\nWe will not go into more details here. Consider reading `Rcpp` documentation for more insights.\n\n## Additional resources\n\n* Rcpp [website](https://www.rcpp.org).\n\n* Advanced R book, [Chapter 25](https://adv-r.hadley.nz/rcpp.html).",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}