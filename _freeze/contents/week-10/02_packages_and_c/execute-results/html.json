{
  "hash": "158418db36993e50f59e5f10cb992ec7",
  "result": {
    "markdown": "---\ntitle: \"Packaging\"\nengine: knitr\nformat:\n  html:\n    css: ../ul.css\n---\n\n\n<br>\nThe same C++ code utilised with `sourceCpp()` can be integrated into an R package. Packaging standalone C++ source files offers several advantages:\n\n* Accessibility: Users can access our code without requiring C++ development tools (but we will need to provide a compiled version of the code for each system).\n\n* Dependency Handling: The R package build system manages multiple source files and their dependencies automatically.\n\n* Infrastructure: Packages offer additional support for testing, documentation, and maintaining consistency in your code.\n\nTo incorporate `Rcpp` into an existing package, we should place your C++ files in the `src/` directory and create or modify specific configuration files:\n\nIn the `DESCRIPTION` file, include:\n```r\nLinkingTo: Rcpp\nImports: Rcpp\n```\n\nIn the `NAMESPACE` file, include:\n```r\nuseDynLib(mypackage)\nimportFrom(Rcpp, sourceCpp)\n```\n\nImporting something from `Rcpp` (here, `sourceCpp`) is essential for proper loading of internal `Rcpp` code due to a bug in R. To set this up automatically, we can use `usethis::use_rcpp()`.\n\nBefore building the package, we have to execute `Rcpp::compileAttributes()`. This function scans the C++ files for `Rcpp::export` attributes and generates the necessary code to make the functions available in R. We have to make sure to re-run `Rcpp::compileAttributes()` when we add, remove, or modify functions, which is typically handled automatically by the `devtools` package and RStudio.\n\n::: {.callout-note appearance=\"simple\"}\n\nWe can use the function `Rcpp.package.skeleton()` from the `Rcpp` package to create a skeleton of an R package that incorporate C++ function.\n\n:::\n\n\n## Additional resources\n\n* Vignette: [Writing a package that uses Rcpp](https://cran.rstudio.com/web/packages/Rcpp/vignettes/Rcpp-package.pdf).",
    "supporting": [
      "02_packages_and_c_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}