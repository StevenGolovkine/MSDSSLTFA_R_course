{
  "hash": "2ede74148395f8f64c408cd9df632cd1",
  "result": {
    "markdown": "---\ntitle: \"Simulation from a mixture of distributions\"\nengine: knitr\n---\n\n\n\n\n<br>\nA mixture of distributions refers to a statistical model that combines multiple probability distributions. This technique is used when a single probability distribution cannot adequately capture the underlying patterns in the data. Each of the underlying distributions has its own set of parameters.\n\n## The composition method\n\nFrequently, a single distribution is insufficient for accurately modelling the data at hand. For example, consider a dataset of heights that includes both men and women. In such a scenario, we would anticipate the data to exhibit a bimodal pattern with two distinct peaks, each corresponding to the mean height of the respective gender. To better represent such data, a mixture of distributions is preferred over a single distribution.\n\nAssume that the probability density function $f$ is a convex mixture of probability density functions $f_k$:\n\n$$X \\sim f(x) = \\sum_{k = 1}^K \\pi_k f_k(x),$$\n\nwhere for all $k = 1, \\dots, K$, $\\pi_k > 0$ and $\\pi_1 + \\dots + \\pi_K = 1$.\nWe introduce an artificial auxiliary variable $Y \\sim \\pi$ such that $\\pi_k = P(Y = k)$ and the conditional probability function of $X$ given $Y = k$ is $f_k(\\cdot)$. Then, generating $X$ with the propability density function $f$ is equivalent to generate the vector $(X, Y)$. \n\n::: {.callout-note icon=false}\n## Algorithm: the composition method\n\nInput:\n\n* $n$: length of the sample\n* $f_k, k = 1, \\dots, K$: probability density functions\n\nAlgorithm:\n\n<div class=\"pseudocode\">\n\n**for** $i$ **from** $1$ **to** $n$ **do**\n\n* generate $y_i \\sim \\pi(\\cdot)$\n* generate $x_i = f_{y_i}(\\cdot)$\n\n**endfor**\n</div>\n\nOutput:\n\n* Sample $(x_1, \\dots, x_n)$ with probability density function $f$.\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\n\n## Example: Simulation of a sample from a Gaussian mixture models.\n\nWe aim to generate a sample $x_1, \\dots, x_n$ i.i.d. from \n$$f(x) = 0.5f_1(x) + 0.25f_2(x) + 0.25f_3(x),$$\nwhere $f_1$ the pdf of $\\mathcal{N}(0, 1)$, $f_2$ is the pdf of $\\mathcal{N}(2, 2.25)$ and $f_3$ is the pdf of $\\mathcal{N}(4, 2.25)$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)  # seed setting\nn <- 10000  # number of samples   \nprobs <- c(0.5, 0.25, 0.25)  # probabilities to be in each mixture\n\n# Generate the pi variable and each mixture separetely\npi <- sample(c(1, 2, 3), n, replace = TRUE, prob = probs)\nf1 <- rnorm(n)\nf2 <- rnorm(n, 2, 1.5)\nf3 <- rnorm(n, 4, 1.5)\n\n# Create the mixture\nf <- (pi == 1) * f1 + (pi == 2) * f2 + (pi == 3) * f3\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)\n\ndensity_estim <- density(f, from = -5, to = 10)\ndensity_true <- (\n    0.5 * dnorm(density_estim$x) +\n    0.25 * dnorm(density_estim$x, 2, 1.5) +\n    0.25 * dnorm(density_estim$x, 4, 1.5)\n)\n\ndensity_df <- tibble(\n  x = density_estim$x,\n  True = density_true,\n  Estimation = density_estim$y\n) |> \n  pivot_longer(cols = c(True, Estimation))\n\nggplot(density_df) +\n  geom_line(aes(x = x, y = value, color = name)) +\n  xlab(\"\") +\n  ylab(\"Density\") +\n  theme_bw() +\n  theme(\n    legend.title = element_blank(),\n    legend.position = c(0.9, 0.9)\n  )\n```\n\n::: {.cell-output-display}\n![](03_distributions_mixture_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note appearance=\"simple\"}\n\n## Example: Simulation of a Zero-Inflated model.\n\nZero-inflated models are commonly used to model count data. The distribution of counts if often represented using a Poisson distribution. In some data, the number of zeros is greater than would be expected using a Poisson distribution. These data are referred as zero-inflated and can be simply described using a mixture model.\n\nWe aim to generate a sample $x_1, \\dots, x_n$ i.i.d. from \n$$f(x) = 0.5\\delta_0(x) + 0.5f_1(x),$$\nwhere $\\delta_0$ is the function that returns $0$ and $f_1$ is the probability mass function of $\\mathcal{P}(5)$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)  # seed setting\nn <- 10000  # number of samples \nprobs <- c(0.5, 0.5)  # probabilities to be in each mixture\n\n# Generate the pi variable and each mixture separetely\npi <- sample(c(1, 2), n, replace = TRUE, prob = probs)\nf1 <- rpois(n, 5)\n\n# Create the mixture\nf <- (pi == 1) * 0 + (pi == 2) * f1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute the true probabilities and an estimation\nprob_estim <- as.vector(table(f) / n)[1:15]\nprob_true <- 0.5 + 0.5 * exp(-5)\nfor (i in 1:14) {\n    prob_true <- c(prob_true, 0.5 * 5^i * exp(-5) / factorial(i))\n}\n\nprobs_df <- tibble(\n    x = seq(0, 14, by = 1),\n    True = prob_true,\n    Estimation = prob_estim\n) |> \n    pivot_longer(cols = c(True, Estimation))\n\nggplot(probs_df) +\n    geom_col(\n        aes(x = x, y = value, fill = name),\n        position = \"dodge\"\n    ) +\n    xlab(\"\") +\n    ylab(\"Probability\") +\n    theme_bw() +\n    theme(\n        legend.title = element_blank(),\n        legend.position = c(0.9, 0.9)\n    )\n```\n\n::: {.cell-output-display}\n![](03_distributions_mixture_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Additional resources\n\n* The R package [mixtools](https://cran.r-project.org/web/packages/mixtools/index.html).",
    "supporting": [
      "03_distributions_mixture_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}